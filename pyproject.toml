[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "edss-hx711"
version = "1.0.0"
description = "HX711 Load Cell Component for Viam SDK"
authors = [
    {name = "EDSS", email = "contact@edss.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Hardware :: Hardware Drivers",
    "Topic :: System :: Hardware :: Hardware Drivers :: GPIO",
    "Environment :: Hardware :: Raspberry Pi",
]
dependencies = [
    "viam-sdk==0.41.1",
    "typing-extensions>=4.0.0",
    "hx711==1.1.2.3",
    "RPi.GPIO>=0.7.1; sys_platform == 'linux' and platform_machine == 'aarch64'",
]

[project.optional-dependencies]
test = [
    "pytest>=7.0.0,<8.0.0",
    "pytest-asyncio>=0.21.0,<1.0.0",
    "pytest-cov>=4.0.0,<5.0.0",
    "pytest-mock>=3.10.0,<4.0.0",
    "pytest-xdist>=3.0.0,<4.0.0",
    "unittest-mock>=1.0.0; python_version < '3.11'",
    "coverage>=7.0.0,<8.0.0",
]
dev = [
    "black>=22.0.0,<24.0.0",
    "flake8>=5.0.0,<7.0.0",
    "mypy>=1.0.0,<2.0.0",
    "pytest-benchmark>=4.0.0,<5.0.0",
]
all = [
    "edss-hx711[test,dev]"
]

[project.urls]
Homepage = "https://github.com/edss/edss-hx711"
Repository = "https://github.com/edss/edss-hx711.git"
Issues = "https://github.com/edss/edss-hx711/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"*" = ["*.py", "*.txt", "*.md"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["main", "tests"]

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "hx711.*",
    "RPi.GPIO",
    "viam.*",
]
ignore_missing_imports = true

# Coverage configuration
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
    "*/build/*",
    "*/dist/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"

# Pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config", 
    "--verbose",
    "--tb=short",
    "--color=yes",
    "--durations=10"
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests", 
    "slow: Slow running tests",
    "hardware: Tests that require hardware",
    "performance: Performance tests"
]
asyncio_mode = "auto"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
    "ignore::UserWarning:hx711.*"
]

# Flake8 configuration
[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "*.egg-info",
    ".venv",
    "venv",
    ".env",
    "env"
]

