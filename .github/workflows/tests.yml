name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-venv python3-dev build-essential
    
    - name: Set up virtual environment
      run: |
        python setup_test_env.py --force-recreate
    
    - name: Run unit tests
      run: |
        .venv/bin/python tests/run_tests.py --unit --coverage --verbose
    
    - name: Run integration tests
      run: |
        .venv/bin/python tests/run_tests.py --integration --verbose
    
    - name: Run linting checks
      run: |
        .venv/bin/python tests/run_tests.py --lint || echo "Linting issues found but not blocking CI"
      continue-on-error: true
    
    - name: Run code formatting checks
      run: |
        .venv/bin/python tests/run_tests.py --format || echo "Formatting issues found but not blocking CI"
      continue-on-error: true
    
    - name: Upload coverage reports
      if: matrix.python-version == '3.11'
      uses: codecov/codecov-action@v3
      with:
        file: ./htmlcov/coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false


  security-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Set up virtual environment
      run: |
        python setup_test_env.py --force-recreate
    
    - name: Run security scan
      run: |
        .venv/bin/pip install safety bandit
        .venv/bin/safety check -r requirements.txt -r requirements-dev.txt
        .venv/bin/bandit -r src/ -f json -o bandit-report.json || true
    
    - name: Upload security scan results
      uses: actions/upload-artifact@v4
      with:
        name: security-scan-results
        path: bandit-report.json

